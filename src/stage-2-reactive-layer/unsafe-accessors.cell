implicit program : Program, typedefs : [TypeName -> NeType], context : Context {
  AutoSymbol var_type(NestedAutoVar var) =
    match (context)
      automaton()   = context.nested_autos[var].type;


  AutoSymbol var_type(LocAutoVar var) =
    match (context)
      procedure()    = context.auto_vars[var];


  AutoSymbol this_auto_symbol =
    match (context)
      automaton() = context.name;


  Type qual_signal_var_type(QualSignalVar var) {
    auto_type = var_type(var.auto_var);
    auto = automaton_by_id(auto_type);
    memb_var = var.memb_var;
    if auto.outputs(memb_var, *):
      return auto.outputs[memb_var].type;
    elif auto.state(memb_var, *):
      return auto.state[memb_var].type;
    else
      ## WHAT ELSE IS ACCESSIBLE FROM INSIDE A PROCEDURE?
      return auto.inputs[memb_var].type;
    ;
  }
}
